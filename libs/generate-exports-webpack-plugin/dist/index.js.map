{"mappings":"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","sources":["libs/generate-exports-webpack-plugin/src/index.ts"],"sourcesContent":["import chokidar from 'chokidar'\nimport path from 'path'\nimport fs from 'fs/promises'\nimport globby from 'globby'\nimport { Options, PluginOptions } from './types'\n\nclass GenerateExportsWebpackPlugin {\n  defaultOptions: PluginOptions = {\n    omitExtension: true,\n    omitSemi: false,\n    singleQuote: true,\n    filename: 'index.js',\n    include: [],\n    exclude: [],\n    directories: [],\n  }\n\n  options!: PluginOptions[]\n\n  constructor(options: Partial<PluginOptions> | Partial<PluginOptions>[] = []) {\n    if (!Array.isArray(options)) {\n      this.options = [{ ...this.defaultOptions, ...options }]\n    } else {\n      this.options = options.map((option) => ({\n        ...this.defaultOptions,\n        ...option,\n      }))\n    }\n  }\n\n  apply() {\n    this.options.forEach((option) => {\n      option.directories.forEach((directoryConfig) => {\n        const directoryConfigIsArray = Array.isArray(directoryConfig)\n        let directory = directoryConfigIsArray\n          ? directoryConfig[0]\n          : directoryConfig\n        const options = directoryConfigIsArray\n          ? { ...this.defaultOptions, ...(directoryConfig[1] || this.options) }\n          : this.options\n        if (!path.isAbsolute(directory)) directory = path.resolve(directory)\n        if (process.env.NODE_ENV === 'production') {\n          return this.generateIndex(directory, options)\n        }\n        const watcher = chokidar.watch(options.include, {\n          ignored: /^\\./,\n          cwd: directory,\n        })\n\n        watcher\n          .on('add', (filePath) =>\n            this.handleFileChange(filePath, directory, options),\n          )\n          .on('unlink', (filePath) =>\n            this.handleFileChange(filePath, directory, options),\n          )\n          .on('ready', () => this.handleFileChange('', directory, options))\n      })\n    })\n  }\n\n  handleFileChange(filePath: string, directory, options) {\n    if (filePath !== path.join(directory, options.filename)) {\n      this.generateIndex(directory, options)\n    }\n  }\n\n  btfs(path: string): string {\n    return path.replace(/\\\\/g, '/')\n  }\n\n  async fileExists(path: string) {\n    return !!(await fs.stat(path).catch((e) => false))\n  }\n\n  generateIndex(directory: string, options: PluginOptions | Options) {\n    if (!path.isAbsolute(directory)) directory = path.resolve(directory)\n    const { btfs } = this\n    const { filename, include, exclude } = options\n    const indexPath = btfs(path.join(directory, filename))\n    globby(include, {\n      cwd: directory,\n      ignore: exclude,\n    })\n      .then((files) => {\n        const indexTemplate = this.getTemplate(directory, options, files)\n        return this.fileExists(indexPath)\n          .then(async (exists) => {\n            if (exists) {\n              const fileContent = await fs.readFile(indexPath, 'utf8')\n              if (fileContent === indexTemplate)\n                return Promise.reject('Contents are identical.')\n            }\n            return fs.mkdir(path.parse(indexPath).dir, { recursive: true })\n          })\n          .then(() => fs.writeFile(indexPath, indexTemplate))\n      })\n      .catch(() => {})\n  }\n\n  getTemplate(\n    directory: string,\n    options: PluginOptions | Options,\n    files: string[],\n  ) {\n    const { btfs } = this\n    const { omitExtension, omitSemi, singleQuote } = options\n    const quoteType = singleQuote ? \"'\" : '\"'\n    return `/**\n* This file is auto-generated by GenerateExportsWebpackPlugin.\n* Check this file into source control.\n* Do not edit this file.\n*/\\n${files\n      .sort((a, b) => a.localeCompare(b))\n      .map((filePath) => {\n        const { name } = path.parse(filePath)\n        const exportRelativePath = btfs(\n          btfs(filePath)\n            .replace(btfs(directory), '')\n            .replace(omitExtension ? /\\.[^/.]+$/ : '', ''),\n        )\n        return `export { default as ${name} } from ${quoteType}${\n          exportRelativePath.startsWith('/')\n            ? `.${exportRelativePath}`\n            : `./${exportRelativePath}`\n        }${quoteType}${omitSemi ? '' : ';'}`\n      })\n      .join('\\n')}\\n/* End of auto-generated content. */\\n`\n  }\n}\n\nmodule.exports = GenerateExportsWebpackPlugin\n"],"names":[],"version":3,"file":"index.js.map","sourceRoot":"../../../"}